- provide :title, @post.title
- channel_style = "color: #{@post.channel.color}" if @post.channel

.post

  h1 style=channel_style = @post.title

  / The logic below works together with other logic in post_policy > show.
  / Both should be reviewed/revised when sofcoop has paying members.

  /- if  is_author_or_admin?(current_user, @post) || @post.visible == 4
  /  .body = Loofah.scrub_fragment(@post.body.markdown2html, :prune).to_s.html_safe
  
  - if @post.visible == 3 && !current_user
    .flashy
      | Only logged-in users can see this post's content. Please 
      = link_to 'log in', new_user_session_path
      | . ( 
      = link_to 'Create a free login', new_user_registration_path
      |  if you don't have one yet.)

  - else
  
    .body = Loofah.scrub_fragment(@post.body.markdown2html, :prune).to_s.html_safe
    
    - if  policy(@post).edit?
      = link_to fa_icon('pencil-square-o', class: 'edit'), edit_post_path(@post.author.username, @post.slug)
      
    hr style='height: 2px; margin-bottom: 1rem'
    
    - if @post.tags.any?
      b style='float: left; margin: 0 1rem 1rem 0' Tags:
      ul.tags = render @post.tags
      hr style='margin: 0.5rem 0 0.5rem 0; background: #aaa'

  table
    tr
      - if @post.channel
        td.avatar = image_tag(@post.channel.avatar_url.to_s, alt: '@@'+@post.channel.slug)
        td.channel style=channel_style #{@post.channel.name}
        td &nbsp; &nbsp;

      td.avatar = link_to avatar_for_user(@post.author), user_path(@post.author.username)

      td.timestamp
        |  Posted by #{link_to '@'+@post.author.username, user_path(@post.author.username)}
        |  #{time_ago_in_words(@post.created_at)} ago.
        - if @post.updated_at > @post.created_at
          |  Updated #{time_ago_in_words(@post.updated_at)} ago.
        br
          | Content visible to: 
          = visible_options.detect{ |who, code| code == @post.visible.to_s }.first

  - if  policy(@post).edit?
    p.controls
      = link_to 'Edit Post', edit_post_path(@post.author.username, @post.slug)
      - if  policy(@post).destroy?
        |  | 
        = link_to 'Delete Post', delete_post_path(@post.author.username, @post.slug),
                  method: :delete, data: {confirm: "You sure?"}
  
  hr style='height: 2px; margin-bottom: 1rem'

  - unless @post.visible == 3 && !current_user
    .comments

      h2 Comments:
  
      == render @post.comments.sort_by{|comment| comment.updated_at}

      - if current_user
        == render 'comment_form', post: @post
      - else
        p
          | To comment, please 
          = link_to 'log in', new_user_session_path
          | . ( 
          = link_to 'Create a free login', new_user_registration_path
          |  if you don't have one yet.)
